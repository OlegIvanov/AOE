//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 
namespace EmployeeWebServiceProxyTypesNamespace {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmployeeWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class EmployeeWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeCountByJobIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeByOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeOperationCompleted;
        
        /// <remarks/>
        public EmployeeWebService() {
            this.Url = "http://localhost:3005/EmployeeWebService.asmx";
        }
        
        /// <remarks/>
        public event GetAllJobsCompletedEventHandler GetAllJobsCompleted;
        
        /// <remarks/>
        public event GetEmployeeListCompletedEventHandler GetEmployeeListCompleted;
        
        /// <remarks/>
        public event GetEmployeeCountByJobIdCompletedEventHandler GetEmployeeCountByJobIdCompleted;
        
        /// <remarks/>
        public event GetEmployeeByCompletedEventHandler GetEmployeeByCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeCompletedEventHandler UpdateEmployeeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllJobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Job[] GetAllJobs() {
            object[] results = this.Invoke("GetAllJobs", new object[0]);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllJobs(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllJobs", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Job[] EndGetAllJobs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllJobsAsync() {
            this.GetAllJobsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllJobsAsync(object userState) {
            if ((this.GetAllJobsOperationCompleted == null)) {
                this.GetAllJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllJobsOperationCompleted);
            }
            this.InvokeAsync("GetAllJobs", new object[0], this.GetAllJobsOperationCompleted, userState);
        }
        
        private void OnGetAllJobsOperationCompleted(object arg) {
            if ((this.GetAllJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllJobsCompleted(this, new GetAllJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] GetEmployeeList(EmployeeQuery employeeQuery) {
            object[] results = this.Invoke("GetEmployeeList", new object[] {
                        employeeQuery});
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEmployeeList(EmployeeQuery employeeQuery, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEmployeeList", new object[] {
                        employeeQuery}, callback, asyncState);
        }
        
        /// <remarks/>
        public Employee[] EndGetEmployeeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeListAsync(EmployeeQuery employeeQuery) {
            this.GetEmployeeListAsync(employeeQuery, null);
        }
        
        /// <remarks/>
        public void GetEmployeeListAsync(EmployeeQuery employeeQuery, object userState) {
            if ((this.GetEmployeeListOperationCompleted == null)) {
                this.GetEmployeeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeListOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeList", new object[] {
                        employeeQuery}, this.GetEmployeeListOperationCompleted, userState);
        }
        
        private void OnGetEmployeeListOperationCompleted(object arg) {
            if ((this.GetEmployeeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeListCompleted(this, new GetEmployeeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeCountByJobId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetEmployeeCountByJobId(int jobId) {
            object[] results = this.Invoke("GetEmployeeCountByJobId", new object[] {
                        jobId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEmployeeCountByJobId(int jobId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEmployeeCountByJobId", new object[] {
                        jobId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetEmployeeCountByJobId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeCountByJobIdAsync(int jobId) {
            this.GetEmployeeCountByJobIdAsync(jobId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeCountByJobIdAsync(int jobId, object userState) {
            if ((this.GetEmployeeCountByJobIdOperationCompleted == null)) {
                this.GetEmployeeCountByJobIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeCountByJobIdOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeCountByJobId", new object[] {
                        jobId}, this.GetEmployeeCountByJobIdOperationCompleted, userState);
        }
        
        private void OnGetEmployeeCountByJobIdOperationCompleted(object arg) {
            if ((this.GetEmployeeCountByJobIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeCountByJobIdCompleted(this, new GetEmployeeCountByJobIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeBy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee GetEmployeeBy(int employeeId) {
            object[] results = this.Invoke("GetEmployeeBy", new object[] {
                        employeeId});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEmployeeBy(int employeeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEmployeeBy", new object[] {
                        employeeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Employee EndGetEmployeeBy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeByAsync(int employeeId) {
            this.GetEmployeeByAsync(employeeId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeByAsync(int employeeId, object userState) {
            if ((this.GetEmployeeByOperationCompleted == null)) {
                this.GetEmployeeByOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeByOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeBy", new object[] {
                        employeeId}, this.GetEmployeeByOperationCompleted, userState);
        }
        
        private void OnGetEmployeeByOperationCompleted(object arg) {
            if ((this.GetEmployeeByCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeByCompleted(this, new GetEmployeeByCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEmployee(Employee employee) {
            this.Invoke("UpdateEmployee", new object[] {
                        employee});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateEmployee(Employee employee, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateEmployee", new object[] {
                        employee}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateEmployee(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(Employee employee) {
            this.UpdateEmployeeAsync(employee, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(Employee employee, object userState) {
            if ((this.UpdateEmployeeOperationCompleted == null)) {
                this.UpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployee", new object[] {
                        employee}, this.UpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeOperationCompleted(object arg) {
            if ((this.UpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Job {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Employee {
        
        private int idField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private double salaryField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public double Salary {
            get {
                return this.salaryField;
            }
            set {
                this.salaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmployeeQuery {
        
        private int jobIdField;
        
        private string sortExpressionField;
        
        private int pageSizeField;
        
        private int pageIndexField;
        
        /// <remarks/>
        public int JobId {
            get {
                return this.jobIdField;
            }
            set {
                this.jobIdField = value;
            }
        }
        
        /// <remarks/>
        public string SortExpression {
            get {
                return this.sortExpressionField;
            }
            set {
                this.sortExpressionField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetAllJobsCompletedEventHandler(object sender, GetAllJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Job[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Job[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetEmployeeListCompletedEventHandler(object sender, GetEmployeeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetEmployeeCountByJobIdCompletedEventHandler(object sender, GetEmployeeCountByJobIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeCountByJobIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeCountByJobIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetEmployeeByCompletedEventHandler(object sender, GetEmployeeByCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void UpdateEmployeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
